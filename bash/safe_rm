#!/bin/bash

function print_usage()
{
    echo "usage: $0 [OPTION]... FILE..."
    echo ""
    echo "This script check if files/paths to be remove UNDER pwd"
    echo "If not, skip remove"
    echo "Remove of pwd is not permissible, either"
    echo "Not support: file name starts with \"-\""
    exit
}

if [ -z $1 ] || [ "$1" == "-h" ] || [ "$1" == "--help" ]; then
    print_usage
fi

set -u
#set -x

function get_option ()
{
    for i in $@
    do
        if [ "${i:0:1}" == "-" ]; then
            #echo "get $i"
            rm_option+=" $i"
        fi
    done
}

function check_file ()
{
    local path=$1

    if [ -z $pwd_path ]; then
        echo "ERROR: pwd is empty variable"
        exit 1
    fi

    if [ "${path:0:1}" != "/" ]; then
        path="$pwd_path/$path"
    fi
    while true
    do
        path=`dirname $path`
        if [ "$path" == "$pwd_path" ]; then
            return 0
        elif [ "$path" == "/" ]; then
            return 1
        fi
    done
}

function check_rm_files ()
{
    local path=$1
    check_file $path
    local ret=$?
    if [ $ret == 0 ]; then
        echo "rm $rm_option $path"
        rm $rm_option $path
    else
        echo "ERROR: SKIP removing $path (not under pwd)"
        exit 1
    fi
}

function get_files ()
{
    for i in $@
    do
        if [ "${i:0:1}" != "-" ]; then
            #echo "check $i"
            check_rm_files $i
        fi
    done
}

rm_option=""
pwd_path=$PWD
get_option $@
get_files $@
